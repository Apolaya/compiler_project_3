Nonterminals useless in grammar

    vector


Rules useless in grammar

   77 vector: '(' ')'


State 52 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 94 conflicts: 7 shift/reduce
State 98 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER error ';'

    4 parameters: ε
    5           | parameter_list

    6 parameter_list: parameter
    7               | parameter_list ',' parameter
    8               | parameter_list error

    9 parameter: IDENTIFIER ':' type

   10 type: INTEGER
   11     | CHARACTER
   12     | REAL

   13 optional_variable: optional_variable variable
   14                  | optional_variable error
   15                  | ε

   16 variable: IDENTIFIER ':' type IS expression ';'
   17         | IDENTIFIER ':' LIST OF type IS list ';'

   18 list: '(' expressions ')'

   19 expressions: expressions ',' expression
   20            | expression

   21 body: BEGIN_ statements END ';'

   22 statements: statements statement_
   23           | ε

   24 statement_: statement ';'
   25           | error ';'

   26 statement: expression
   27          | if_statement
   28          | fold_statement
   29          | when_statement
   30          | switch_statement

   31 switch_statement: SWITCH expression IS cases ENDSWITCH
   32                 | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   33 when_statement: WHEN condition ',' expression ':' expression

   34 fold_statement: FOLD direction operator operand ENDFOLD

   35 direction: LEFT
   36          | RIGHT

   37 operator: ADDOP
   38         | MULOP
   39         | RELOP

   40 operand: list
   41        | IDENTIFIER

   42 if_statement: IF condition THEN statements elsif_clauses optional_else ENDIF

   43 elsif_clauses: elsif_clauses elsif_clause
   44              | ε

   45 elsif_clause: ELSIF condition THEN statements

   46 optional_else: ELSE statements
   47              | ε

   48 cases: cases case
   49      | ε

   50 case: CASE INT_LITERAL ARROW statements
   51     | CASE error ARROW statements ';'
   52     | CASE INT_LITERAL ARROW error ';'

   53 condition: condition ANDOP relation
   54          | condition OROP logical_and
   55          | logical_and

   56 logical_and: logical_and ANDOP logical_not
   57            | logical_not

   58 logical_not: NOTOP logical_not
   59            | relation

   60 relation: '(' condition ')'
   61         | expression RELOP expression

   62 expression: expression operator term
   63           | term

   64 term: term MULOP factor
   65     | term REMOP factor
   66     | factor

   67 factor: factor EXPOP primary
   68       | primary

   69 primary: '(' expression ')'
   70        | NEGOP primary
   71        | INT_LITERAL
   72        | CHAR_LITERAL
   73        | REAL_LITERAL
   74        | HEX_LITERAL
   75        | IDENTIFIER '(' expression ')'
   76        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 60 69 75
    ')' (41) 18 60 69 75
    ',' (44) 7 19 33
    ':' (58) 9 16 17 33
    ';' (59) 2 3 16 17 21 24 25 32 51 52
    error (256) 3 8 14 25 51 52
    IDENTIFIER <iden> (258) 2 3 9 16 17 41 75 76
    INT_LITERAL <value> (259) 50 52 71
    CHAR_LITERAL <value> (260) 72
    HEX_LITERAL <value> (261) 74
    REAL <value> (262) 12
    REAL_LITERAL <value> (263) 73
    ADDOP <oper> (264) 37
    MULOP <oper> (265) 38 64
    ANDOP <oper> (266) 53 56
    RELOP <oper> (267) 39 61
    ARROW <oper> (268) 32 50 51 52
    REMOP <oper> (269) 65
    EXPOP <oper> (270) 67
    NEGOP <oper> (271) 70
    OROP <oper> (272) 54
    NOTOP <oper> (273) 58
    LEFT (274) 35
    RIGHT (275) 36
    ELSIF (276) 45
    ENDFOLD (277) 34
    FOLD (278) 34
    IF (279) 42
    THEN (280) 42 45
    ENDIF (281) 42
    BEGIN_ (282) 21
    CASE (283) 50 51 52
    CHARACTER (284) 11
    ELSE (285) 46
    END (286) 21
    ENDSWITCH (287) 31 32
    FUNCTION (288) 2 3
    INTEGER (289) 10
    IS (290) 16 17 31 32
    LIST (291) 17
    OF (292) 17
    OTHERS (293) 32
    RETURNS (294) 2
    SWITCH (295) 31 32
    WHEN (296) 33


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function <value> (48)
        on left: 1
        on right: 0
    function_header <value> (49)
        on left: 2 3
        on right: 1
    parameters <value> (50)
        on left: 4 5
        on right: 2
    parameter_list <value> (51)
        on left: 6 7 8
        on right: 5 7 8
    parameter <value> (52)
        on left: 9
        on right: 6 7
    type <value> (53)
        on left: 10 11 12
        on right: 2 9 16 17
    optional_variable <value> (54)
        on left: 13 14 15
        on right: 1 13 14
    variable <value> (55)
        on left: 16 17
        on right: 13
    list <list> (56)
        on left: 18
        on right: 17 40
    expressions <list> (57)
        on left: 19 20
        on right: 18 19
    body <value> (58)
        on left: 21
        on right: 1
    statements <value> (59)
        on left: 22 23
        on right: 21 22 42 45 46 50 51
    statement_ <value> (60)
        on left: 24 25
        on right: 22
    statement <value> (61)
        on left: 26 27 28 29 30
        on right: 24 32
    switch_statement <value> (62)
        on left: 31 32
        on right: 30
    when_statement <value> (63)
        on left: 33
        on right: 29
    fold_statement <value> (64)
        on left: 34
        on right: 28
    direction <value> (65)
        on left: 35 36
        on right: 34
    operator <oper> (66)
        on left: 37 38 39
        on right: 34 62
    operand <value> (67)
        on left: 40 41
        on right: 34
    if_statement <value> (68)
        on left: 42
        on right: 27
    elsif_clauses <value> (69)
        on left: 43 44
        on right: 42 43
    elsif_clause <value> (70)
        on left: 45
        on right: 43
    optional_else <value> (71)
        on left: 46 47
        on right: 42
    cases <value> (72)
        on left: 48 49
        on right: 31 32 48
    case <value> (73)
        on left: 50 51 52
        on right: 48
    condition <value> (74)
        on left: 53 54 55
        on right: 33 42 45 53 54 60
    logical_and <value> (75)
        on left: 56 57
        on right: 54 55 56
    logical_not <value> (76)
        on left: 58 59
        on right: 56 57 58
    relation <value> (77)
        on left: 60 61
        on right: 53 59
    expression <value> (78)
        on left: 62 63
        on right: 16 19 20 26 31 32 33 61 62 69 75
    term <value> (79)
        on left: 64 65 66
        on right: 62 63 64 65
    factor <value> (80)
        on left: 67 68
        on right: 64 65 66 67
    primary <value> (81)
        on left: 69 70 71 72 73 74 75 76
        on right: 67 68 70


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION • IDENTIFIER error ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 15 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER • error ';'

    error       shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    RETURNS  reduce using rule 4 (parameters)

    parameters      go to state 9
    parameter_list  go to state 10
    parameter       go to state 11


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
   13 optional_variable: optional_variable • variable
   14                  | optional_variable • error

    error       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    BEGIN_      shift, and go to state 14

    variable  go to state 15
    body      go to state 16


State 7

    3 function_header: FUNCTION IDENTIFIER error • ';'

    ';'  shift, and go to state 17


State 8

    9 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 9

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 19


State 10

    5 parameters: parameter_list •
    7 parameter_list: parameter_list • ',' parameter
    8               | parameter_list • error

    error  shift, and go to state 20
    ','    shift, and go to state 21

    RETURNS  reduce using rule 5 (parameters)


State 11

    6 parameter_list: parameter •

    $default  reduce using rule 6 (parameter_list)


State 12

   14 optional_variable: optional_variable error •

    $default  reduce using rule 14 (optional_variable)


State 13

   16 variable: IDENTIFIER • ':' type IS expression ';'
   17         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 22


State 14

   21 body: BEGIN_ • statements END ';'

    $default  reduce using rule 23 (statements)

    statements  go to state 23


State 15

   13 optional_variable: optional_variable variable •

    $default  reduce using rule 13 (optional_variable)


State 16

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 17

    3 function_header: FUNCTION IDENTIFIER error ';' •

    $default  reduce using rule 3 (function_header)


State 18

    9 parameter: IDENTIFIER ':' • type

    REAL       shift, and go to state 24
    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26

    type  go to state 27


State 19

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    REAL       shift, and go to state 24
    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26

    type  go to state 28


State 20

    8 parameter_list: parameter_list error •

    $default  reduce using rule 8 (parameter_list)


State 21

    7 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 8

    parameter  go to state 29


State 22

   16 variable: IDENTIFIER ':' • type IS expression ';'
   17         | IDENTIFIER ':' • LIST OF type IS list ';'

    REAL       shift, and go to state 24
    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    LIST       shift, and go to state 30

    type  go to state 31


State 23

   21 body: BEGIN_ statements • END ';'
   22 statements: statements • statement_

    error         shift, and go to state 32
    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    END           shift, and go to state 41
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    '('           shift, and go to state 44

    statement_        go to state 45
    statement         go to state 46
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 24

   12 type: REAL •

    $default  reduce using rule 12 (type)


State 25

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 26

   10 type: INTEGER •

    $default  reduce using rule 10 (type)


State 27

    9 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 9 (parameter)


State 28

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 55


State 29

    7 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 7 (parameter_list)


State 30

   17 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 56


State 31

   16 variable: IDENTIFIER ':' type • IS expression ';'

    IS  shift, and go to state 57


State 32

   25 statement_: error • ';'

    ';'  shift, and go to state 58


State 33

   75 primary: IDENTIFIER • '(' expression ')'
   76        | IDENTIFIER •

    '('  shift, and go to state 59

    $default  reduce using rule 76 (primary)


State 34

   71 primary: INT_LITERAL •

    $default  reduce using rule 71 (primary)


State 35

   72 primary: CHAR_LITERAL •

    $default  reduce using rule 72 (primary)


State 36

   74 primary: HEX_LITERAL •

    $default  reduce using rule 74 (primary)


State 37

   73 primary: REAL_LITERAL •

    $default  reduce using rule 73 (primary)


State 38

   70 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    primary  go to state 60


State 39

   34 fold_statement: FOLD • direction operator operand ENDFOLD

    LEFT   shift, and go to state 61
    RIGHT  shift, and go to state 62

    direction  go to state 63


State 40

   42 if_statement: IF • condition THEN statements elsif_clauses optional_else ENDIF

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    condition    go to state 66
    logical_and  go to state 67
    logical_not  go to state 68
    relation     go to state 69
    expression   go to state 70
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 41

   21 body: BEGIN_ statements END • ';'

    ';'  shift, and go to state 71


State 42

   31 switch_statement: SWITCH • expression IS cases ENDSWITCH
   32                 | SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 72
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 43

   33 when_statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    condition    go to state 73
    logical_and  go to state 67
    logical_not  go to state 68
    relation     go to state 69
    expression   go to state 70
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 44

   69 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 74
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 45

   22 statements: statements statement_ •

    $default  reduce using rule 22 (statements)


State 46

   24 statement_: statement • ';'

    ';'  shift, and go to state 75


State 47

   30 statement: switch_statement •

    $default  reduce using rule 30 (statement)


State 48

   29 statement: when_statement •

    $default  reduce using rule 29 (statement)


State 49

   28 statement: fold_statement •

    $default  reduce using rule 28 (statement)


State 50

   27 statement: if_statement •

    $default  reduce using rule 27 (statement)


State 51

   26 statement: expression •
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    $default  reduce using rule 26 (statement)

    operator  go to state 79


State 52

   63 expression: term •
   64 term: term • MULOP factor
   65     | term • REMOP factor

    MULOP  shift, and go to state 80
    REMOP  shift, and go to state 81

    MULOP     [reduce using rule 63 (expression)]
    $default  reduce using rule 63 (expression)


State 53

   66 term: factor •
   67 factor: factor • EXPOP primary

    EXPOP  shift, and go to state 82

    $default  reduce using rule 66 (term)


State 54

   68 factor: primary •

    $default  reduce using rule 68 (factor)


State 55

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 56

   17 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    REAL       shift, and go to state 24
    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26

    type  go to state 83


State 57

   16 variable: IDENTIFIER ':' type IS • expression ';'

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 84
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 58

   25 statement_: error ';' •

    $default  reduce using rule 25 (statement_)


State 59

   75 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 85
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 60

   70 primary: NEGOP primary •

    $default  reduce using rule 70 (primary)


State 61

   35 direction: LEFT •

    $default  reduce using rule 35 (direction)


State 62

   36 direction: RIGHT •

    $default  reduce using rule 36 (direction)


State 63

   34 fold_statement: FOLD direction • operator operand ENDFOLD

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    operator  go to state 86


State 64

   58 logical_not: NOTOP • logical_not

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    logical_not  go to state 87
    relation     go to state 69
    expression   go to state 70
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 65

   60 relation: '(' • condition ')'
   69 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    condition    go to state 88
    logical_and  go to state 67
    logical_not  go to state 68
    relation     go to state 69
    expression   go to state 89
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 66

   42 if_statement: IF condition • THEN statements elsif_clauses optional_else ENDIF
   53 condition: condition • ANDOP relation
   54          | condition • OROP logical_and

    ANDOP  shift, and go to state 90
    OROP   shift, and go to state 91
    THEN   shift, and go to state 92


State 67

   55 condition: logical_and •
   56 logical_and: logical_and • ANDOP logical_not

    ANDOP  shift, and go to state 93

    ANDOP     [reduce using rule 55 (condition)]
    $default  reduce using rule 55 (condition)


State 68

   57 logical_and: logical_not •

    $default  reduce using rule 57 (logical_and)


State 69

   59 logical_not: relation •

    $default  reduce using rule 59 (logical_not)


State 70

   61 relation: expression • RELOP expression
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 94

    operator  go to state 79


State 71

   21 body: BEGIN_ statements END ';' •

    $default  reduce using rule 21 (body)


State 72

   31 switch_statement: SWITCH expression • IS cases ENDSWITCH
   32                 | SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    IS     shift, and go to state 95

    operator  go to state 79


State 73

   33 when_statement: WHEN condition • ',' expression ':' expression
   53 condition: condition • ANDOP relation
   54          | condition • OROP logical_and

    ANDOP  shift, and go to state 90
    OROP   shift, and go to state 91
    ','    shift, and go to state 96


State 74

   62 expression: expression • operator term
   69 primary: '(' expression • ')'

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    ')'    shift, and go to state 97

    operator  go to state 79


State 75

   24 statement_: statement ';' •

    $default  reduce using rule 24 (statement_)


State 76

   37 operator: ADDOP •

    $default  reduce using rule 37 (operator)


State 77

   38 operator: MULOP •

    $default  reduce using rule 38 (operator)


State 78

   39 operator: RELOP •

    $default  reduce using rule 39 (operator)


State 79

   62 expression: expression operator • term

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    term     go to state 98
    factor   go to state 53
    primary  go to state 54


State 80

   64 term: term MULOP • factor

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    factor   go to state 99
    primary  go to state 54


State 81

   65 term: term REMOP • factor

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    factor   go to state 100
    primary  go to state 54


State 82

   67 factor: factor EXPOP • primary

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    primary  go to state 101


State 83

   17 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 102


State 84

   16 variable: IDENTIFIER ':' type IS expression • ';'
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    ';'    shift, and go to state 103

    operator  go to state 79


State 85

   62 expression: expression • operator term
   75 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    ')'    shift, and go to state 104

    operator  go to state 79


State 86

   34 fold_statement: FOLD direction operator • operand ENDFOLD

    IDENTIFIER  shift, and go to state 105
    '('         shift, and go to state 106

    list     go to state 107
    operand  go to state 108


State 87

   58 logical_not: NOTOP logical_not •

    $default  reduce using rule 58 (logical_not)


State 88

   53 condition: condition • ANDOP relation
   54          | condition • OROP logical_and
   60 relation: '(' condition • ')'

    ANDOP  shift, and go to state 90
    OROP   shift, and go to state 91
    ')'    shift, and go to state 109


State 89

   61 relation: expression • RELOP expression
   62 expression: expression • operator term
   69 primary: '(' expression • ')'

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 94
    ')'    shift, and go to state 97

    operator  go to state 79


State 90

   53 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 65

    relation    go to state 110
    expression  go to state 70
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 91

   54 condition: condition OROP • logical_and

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    logical_and  go to state 111
    logical_not  go to state 68
    relation     go to state 69
    expression   go to state 70
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 92

   42 if_statement: IF condition THEN • statements elsif_clauses optional_else ENDIF

    $default  reduce using rule 23 (statements)

    statements  go to state 112


State 93

   56 logical_and: logical_and ANDOP • logical_not

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    logical_not  go to state 113
    relation     go to state 69
    expression   go to state 70
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 94

   39 operator: RELOP •
   61 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    IDENTIFIER    [reduce using rule 39 (operator)]
    INT_LITERAL   [reduce using rule 39 (operator)]
    CHAR_LITERAL  [reduce using rule 39 (operator)]
    HEX_LITERAL   [reduce using rule 39 (operator)]
    REAL_LITERAL  [reduce using rule 39 (operator)]
    NEGOP         [reduce using rule 39 (operator)]
    '('           [reduce using rule 39 (operator)]

    expression  go to state 114
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 95

   31 switch_statement: SWITCH expression IS • cases ENDSWITCH
   32                 | SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 49 (cases)

    cases  go to state 115


State 96

   33 when_statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 116
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 97

   69 primary: '(' expression ')' •

    $default  reduce using rule 69 (primary)


State 98

   62 expression: expression operator term •
   64 term: term • MULOP factor
   65     | term • REMOP factor

    MULOP  shift, and go to state 80
    REMOP  shift, and go to state 81

    MULOP     [reduce using rule 62 (expression)]
    $default  reduce using rule 62 (expression)


State 99

   64 term: term MULOP factor •
   67 factor: factor • EXPOP primary

    EXPOP  shift, and go to state 82

    $default  reduce using rule 64 (term)


State 100

   65 term: term REMOP factor •
   67 factor: factor • EXPOP primary

    EXPOP  shift, and go to state 82

    $default  reduce using rule 65 (term)


State 101

   67 factor: factor EXPOP primary •

    $default  reduce using rule 67 (factor)


State 102

   17 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 106

    list  go to state 117


State 103

   16 variable: IDENTIFIER ':' type IS expression ';' •

    $default  reduce using rule 16 (variable)


State 104

   75 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 75 (primary)


State 105

   41 operand: IDENTIFIER •

    $default  reduce using rule 41 (operand)


State 106

   18 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expressions  go to state 118
    expression   go to state 119
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 107

   40 operand: list •

    $default  reduce using rule 40 (operand)


State 108

   34 fold_statement: FOLD direction operator operand • ENDFOLD

    ENDFOLD  shift, and go to state 120


State 109

   60 relation: '(' condition ')' •

    $default  reduce using rule 60 (relation)


State 110

   53 condition: condition ANDOP relation •

    $default  reduce using rule 53 (condition)


State 111

   54 condition: condition OROP logical_and •
   56 logical_and: logical_and • ANDOP logical_not

    ANDOP  shift, and go to state 93

    ANDOP     [reduce using rule 54 (condition)]
    $default  reduce using rule 54 (condition)


State 112

   22 statements: statements • statement_
   42 if_statement: IF condition THEN statements • elsif_clauses optional_else ENDIF

    error         shift, and go to state 32
    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    '('           shift, and go to state 44

    ELSIF  reduce using rule 44 (elsif_clauses)
    ENDIF  reduce using rule 44 (elsif_clauses)
    ELSE   reduce using rule 44 (elsif_clauses)

    statement_        go to state 45
    statement         go to state 46
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    elsif_clauses     go to state 121
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 113

   56 logical_and: logical_and ANDOP logical_not •

    $default  reduce using rule 56 (logical_and)


State 114

   61 relation: expression RELOP expression •
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    $default  reduce using rule 61 (relation)

    operator  go to state 79


State 115

   31 switch_statement: SWITCH expression IS cases • ENDSWITCH
   32                 | SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   48 cases: cases • case

    CASE       shift, and go to state 122
    ENDSWITCH  shift, and go to state 123
    OTHERS     shift, and go to state 124

    case  go to state 125


State 116

   33 when_statement: WHEN condition ',' expression • ':' expression
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    ':'    shift, and go to state 126

    operator  go to state 79


State 117

   17 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 127


State 118

   18 list: '(' expressions • ')'
   19 expressions: expressions • ',' expression

    ','  shift, and go to state 128
    ')'  shift, and go to state 129


State 119

   20 expressions: expression •
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    $default  reduce using rule 20 (expressions)

    operator  go to state 79


State 120

   34 fold_statement: FOLD direction operator operand ENDFOLD •

    $default  reduce using rule 34 (fold_statement)


State 121

   42 if_statement: IF condition THEN statements elsif_clauses • optional_else ENDIF
   43 elsif_clauses: elsif_clauses • elsif_clause

    ELSIF  shift, and go to state 130
    ELSE   shift, and go to state 131

    $default  reduce using rule 47 (optional_else)

    elsif_clause   go to state 132
    optional_else  go to state 133


State 122

   50 case: CASE • INT_LITERAL ARROW statements
   51     | CASE • error ARROW statements ';'
   52     | CASE • INT_LITERAL ARROW error ';'

    error        shift, and go to state 134
    INT_LITERAL  shift, and go to state 135


State 123

   31 switch_statement: SWITCH expression IS cases ENDSWITCH •

    $default  reduce using rule 31 (switch_statement)


State 124

   32 switch_statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 136


State 125

   48 cases: cases case •

    $default  reduce using rule 48 (cases)


State 126

   33 when_statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 137
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 127

   17 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 17 (variable)


State 128

   19 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 44

    expression  go to state 138
    term        go to state 52
    factor      go to state 53
    primary     go to state 54


State 129

   18 list: '(' expressions ')' •

    $default  reduce using rule 18 (list)


State 130

   45 elsif_clause: ELSIF • condition THEN statements

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 64
    '('           shift, and go to state 65

    condition    go to state 139
    logical_and  go to state 67
    logical_not  go to state 68
    relation     go to state 69
    expression   go to state 70
    term         go to state 52
    factor       go to state 53
    primary      go to state 54


State 131

   46 optional_else: ELSE • statements

    $default  reduce using rule 23 (statements)

    statements  go to state 140


State 132

   43 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 43 (elsif_clauses)


State 133

   42 if_statement: IF condition THEN statements elsif_clauses optional_else • ENDIF

    ENDIF  shift, and go to state 141


State 134

   51 case: CASE error • ARROW statements ';'

    ARROW  shift, and go to state 142


State 135

   50 case: CASE INT_LITERAL • ARROW statements
   52     | CASE INT_LITERAL • ARROW error ';'

    ARROW  shift, and go to state 143


State 136

   32 switch_statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    '('           shift, and go to state 44

    statement         go to state 144
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 137

   33 when_statement: WHEN condition ',' expression ':' expression •
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    $default  reduce using rule 33 (when_statement)

    operator  go to state 79


State 138

   19 expressions: expressions ',' expression •
   62 expression: expression • operator term

    ADDOP  shift, and go to state 76
    MULOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    $default  reduce using rule 19 (expressions)

    operator  go to state 79


State 139

   45 elsif_clause: ELSIF condition • THEN statements
   53 condition: condition • ANDOP relation
   54          | condition • OROP logical_and

    ANDOP  shift, and go to state 90
    OROP   shift, and go to state 91
    THEN   shift, and go to state 145


State 140

   22 statements: statements • statement_
   46 optional_else: ELSE statements •

    error         shift, and go to state 32
    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    '('           shift, and go to state 44

    ENDIF  reduce using rule 46 (optional_else)

    statement_        go to state 45
    statement         go to state 46
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 141

   42 if_statement: IF condition THEN statements elsif_clauses optional_else ENDIF •

    $default  reduce using rule 42 (if_statement)


State 142

   51 case: CASE error ARROW • statements ';'

    $default  reduce using rule 23 (statements)

    statements  go to state 146


State 143

   50 case: CASE INT_LITERAL ARROW • statements
   52     | CASE INT_LITERAL ARROW • error ';'

    error  shift, and go to state 147

    error         [reduce using rule 23 (statements)]
    IDENTIFIER    reduce using rule 23 (statements)
    INT_LITERAL   reduce using rule 23 (statements)
    CHAR_LITERAL  reduce using rule 23 (statements)
    HEX_LITERAL   reduce using rule 23 (statements)
    REAL_LITERAL  reduce using rule 23 (statements)
    NEGOP         reduce using rule 23 (statements)
    FOLD          reduce using rule 23 (statements)
    IF            reduce using rule 23 (statements)
    CASE          reduce using rule 23 (statements)
    ENDSWITCH     reduce using rule 23 (statements)
    OTHERS        reduce using rule 23 (statements)
    SWITCH        reduce using rule 23 (statements)
    WHEN          reduce using rule 23 (statements)
    '('           reduce using rule 23 (statements)

    statements  go to state 148


State 144

   32 switch_statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 149


State 145

   45 elsif_clause: ELSIF condition THEN • statements

    $default  reduce using rule 23 (statements)

    statements  go to state 150


State 146

   22 statements: statements • statement_
   51 case: CASE error ARROW statements • ';'

    error         shift, and go to state 32
    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    ';'           shift, and go to state 151
    '('           shift, and go to state 44

    statement_        go to state 45
    statement         go to state 46
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 147

   52 case: CASE INT_LITERAL ARROW error • ';'

    ';'  shift, and go to state 152


State 148

   22 statements: statements • statement_
   50 case: CASE INT_LITERAL ARROW statements •

    error         shift, and go to state 32
    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    '('           shift, and go to state 44

    CASE       reduce using rule 50 (case)
    ENDSWITCH  reduce using rule 50 (case)
    OTHERS     reduce using rule 50 (case)

    statement_        go to state 45
    statement         go to state 46
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 149

   32 switch_statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 153


State 150

   22 statements: statements • statement_
   45 elsif_clause: ELSIF condition THEN statements •

    error         shift, and go to state 32
    IDENTIFIER    shift, and go to state 33
    INT_LITERAL   shift, and go to state 34
    CHAR_LITERAL  shift, and go to state 35
    HEX_LITERAL   shift, and go to state 36
    REAL_LITERAL  shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    SWITCH        shift, and go to state 42
    WHEN          shift, and go to state 43
    '('           shift, and go to state 44

    ELSIF  reduce using rule 45 (elsif_clause)
    ENDIF  reduce using rule 45 (elsif_clause)
    ELSE   reduce using rule 45 (elsif_clause)

    statement_        go to state 45
    statement         go to state 46
    switch_statement  go to state 47
    when_statement    go to state 48
    fold_statement    go to state 49
    if_statement      go to state 50
    expression        go to state 51
    term              go to state 52
    factor            go to state 53
    primary           go to state 54


State 151

   51 case: CASE error ARROW statements ';' •

    $default  reduce using rule 51 (case)


State 152

   52 case: CASE INT_LITERAL ARROW error ';' •

    $default  reduce using rule 52 (case)


State 153

   32 switch_statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 32 (switch_statement)
