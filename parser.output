Nonterminals useless in grammar

    vector


Rules useless in grammar

   78 vector: '(' ')'


Rules useless in parser due to conflicts

   53 case: CASE INT_LITERAL ARROW error ';'


State 14 conflicts: 12 shift/reduce
State 63 conflicts: 1 shift/reduce
State 90 conflicts: 12 shift/reduce
State 110 conflicts: 1 shift/reduce
State 131 conflicts: 12 shift/reduce
State 143 conflicts: 12 shift/reduce
State 144 conflicts: 12 shift/reduce
State 146 conflicts: 12 shift/reduce
State 153 conflicts: 3 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER error ';'

    4 parameters: ε
    5           | parameter_list

    6 parameter_list: parameter
    7               | parameter_list ',' parameter
    8               | parameter_list error

    9 parameter: IDENTIFIER ':' type

   10 type: INTEGER
   11     | CHARACTER
   12     | REAL

   13 optional_variable: optional_variable variable
   14                  | optional_variable error
   15                  | ε

   16 variable: IDENTIFIER ':' type IS expression ';'
   17         | IDENTIFIER ':' LIST OF type IS list ';'

   18 list: '(' expressions ')'

   19 expressions: expressions ',' expression
   20            | expression

   21 body: BEGIN_ statements END ';'

   22 statements: statements statement_
   23           | statement_
   24           | ε

   25 statement_: statement ';'
   26           | error ';'

   27 statement: expression
   28          | if_statement
   29          | fold_statement
   30          | when_statement
   31          | switch_statement

   32 switch_statement: SWITCH expression IS cases ENDSWITCH
   33                 | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   34 when_statement: WHEN condition ',' expression ':' expression

   35 fold_statement: FOLD direction operator operand ENDFOLD

   36 direction: LEFT
   37          | RIGHT

   38 operator: ADDOP
   39         | MULOP
   40         | RELOP

   41 operand: list
   42        | IDENTIFIER

   43 if_statement: IF condition THEN statements elsif_clauses optional_else ENDIF

   44 elsif_clauses: elsif_clauses elsif_clause
   45              | ε

   46 elsif_clause: ELSIF condition THEN statements

   47 optional_else: ELSE statements
   48              | ε

   49 cases: cases case
   50      | ε

   51 case: CASE INT_LITERAL ARROW statements
   52     | CASE error ARROW statements ';'
   53     | CASE INT_LITERAL ARROW error ';'

   54 condition: condition ANDOP relation
   55          | condition OROP logical_and
   56          | logical_and

   57 logical_and: logical_and ANDOP logical_not
   58            | logical_not

   59 logical_not: NOTOP logical_not
   60            | relation

   61 relation: '(' condition ')'
   62         | expression RELOP expression

   63 expression: expression ADDOP term
   64           | term

   65 term: term MULOP factor
   66     | term REMOP factor
   67     | factor

   68 factor: primary
   69       | primary EXPOP factor

   70 primary: NEGOP primary
   71        | '(' expression ')'
   72        | INT_LITERAL
   73        | CHAR_LITERAL
   74        | REAL_LITERAL
   75        | HEX_LITERAL
   76        | IDENTIFIER '(' expression ')'
   77        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 61 71 76
    ')' (41) 18 61 71 76
    ',' (44) 7 19 34
    ':' (58) 9 16 17 34
    ';' (59) 2 3 16 17 21 25 26 33 52 53
    error (256) 3 8 14 26 52 53
    IDENTIFIER <iden> (258) 2 3 9 16 17 42 76 77
    INT_LITERAL <value> (259) 51 53 72
    CHAR_LITERAL <value> (260) 73
    HEX_LITERAL <value> (261) 75
    REAL <value> (262) 12
    REAL_LITERAL <value> (263) 74
    ADDOP <oper> (264) 38 63
    MULOP <oper> (265) 39 65
    ANDOP <oper> (266) 54 57
    RELOP <oper> (267) 40 62
    ARROW <oper> (268) 33 51 52 53
    REMOP <oper> (269) 66
    EXPOP <oper> (270) 69
    NEGOP <oper> (271) 70
    OROP <oper> (272) 55
    NOTOP <oper> (273) 59
    LEFT (274) 36
    RIGHT (275) 37
    ELSIF (276) 46
    ENDFOLD (277) 35
    FOLD (278) 35
    IF (279) 43
    THEN (280) 43 46
    ENDIF (281) 43
    BEGIN_ (282) 21
    CASE (283) 51 52 53
    CHARACTER (284) 11
    ELSE (285) 47
    END (286) 21
    ENDSWITCH (287) 32 33
    FUNCTION (288) 2 3
    INTEGER (289) 10
    IS (290) 16 17 32 33
    LIST (291) 17
    OF (292) 17
    OTHERS (293) 33
    RETURNS (294) 2
    SWITCH (295) 32 33
    WHEN (296) 34


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function <value> (48)
        on left: 1
        on right: 0
    function_header <value> (49)
        on left: 2 3
        on right: 1
    parameters <value> (50)
        on left: 4 5
        on right: 2
    parameter_list <value> (51)
        on left: 6 7 8
        on right: 5 7 8
    parameter <value> (52)
        on left: 9
        on right: 6 7
    type <value> (53)
        on left: 10 11 12
        on right: 2 9 16 17
    optional_variable <value> (54)
        on left: 13 14 15
        on right: 1 13 14
    variable <value> (55)
        on left: 16 17
        on right: 13
    list <list> (56)
        on left: 18
        on right: 17 41
    expressions <list> (57)
        on left: 19 20
        on right: 18 19
    body <value> (58)
        on left: 21
        on right: 1
    statements <value> (59)
        on left: 22 23 24
        on right: 21 22 43 46 47 51 52
    statement_ <value> (60)
        on left: 25 26
        on right: 22 23
    statement <value> (61)
        on left: 27 28 29 30 31
        on right: 25 33
    switch_statement <value> (62)
        on left: 32 33
        on right: 31
    when_statement <value> (63)
        on left: 34
        on right: 30
    fold_statement <value> (64)
        on left: 35
        on right: 29
    direction <value> (65)
        on left: 36 37
        on right: 35
    operator <oper> (66)
        on left: 38 39 40
        on right: 35
    operand <value> (67)
        on left: 41 42
        on right: 35
    if_statement <value> (68)
        on left: 43
        on right: 28
    elsif_clauses <value> (69)
        on left: 44 45
        on right: 43 44
    elsif_clause <value> (70)
        on left: 46
        on right: 44
    optional_else <value> (71)
        on left: 47 48
        on right: 43
    cases <value> (72)
        on left: 49 50
        on right: 32 33 49
    case <value> (73)
        on left: 51 52 53
        on right: 49
    condition <value> (74)
        on left: 54 55 56
        on right: 34 43 46 54 55 61
    logical_and <value> (75)
        on left: 57 58
        on right: 55 56 57
    logical_not <value> (76)
        on left: 59 60
        on right: 57 58 59
    relation <value> (77)
        on left: 61 62
        on right: 54 60
    expression <value> (78)
        on left: 63 64
        on right: 16 19 20 27 32 33 34 62 63 71 76
    term <value> (79)
        on left: 65 66 67
        on right: 63 64 65 66
    factor <value> (80)
        on left: 68 69
        on right: 65 66 67 69
    primary <value> (81)
        on left: 70 71 72 73 74 75 76 77
        on right: 68 69 70


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION • IDENTIFIER error ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 15 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER • error ';'

    error       shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    RETURNS  reduce using rule 4 (parameters)

    parameters      go to state 9
    parameter_list  go to state 10
    parameter       go to state 11


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
   13 optional_variable: optional_variable • variable
   14                  | optional_variable • error

    error       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    BEGIN_      shift, and go to state 14

    variable  go to state 15
    body      go to state 16


State 7

    3 function_header: FUNCTION IDENTIFIER error • ';'

    ';'  shift, and go to state 17


State 8

    9 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 9

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 19


State 10

    5 parameters: parameter_list •
    7 parameter_list: parameter_list • ',' parameter
    8               | parameter_list • error

    error  shift, and go to state 20
    ','    shift, and go to state 21

    RETURNS  reduce using rule 5 (parameters)


State 11

    6 parameter_list: parameter •

    $default  reduce using rule 6 (parameter_list)


State 12

   14 optional_variable: optional_variable error •

    $default  reduce using rule 14 (optional_variable)


State 13

   16 variable: IDENTIFIER • ':' type IS expression ';'
   17         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 22


State 14

   21 body: BEGIN_ • statements END ';'

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    error         [reduce using rule 24 (statements)]
    IDENTIFIER    [reduce using rule 24 (statements)]
    INT_LITERAL   [reduce using rule 24 (statements)]
    CHAR_LITERAL  [reduce using rule 24 (statements)]
    HEX_LITERAL   [reduce using rule 24 (statements)]
    REAL_LITERAL  [reduce using rule 24 (statements)]
    NEGOP         [reduce using rule 24 (statements)]
    FOLD          [reduce using rule 24 (statements)]
    IF            [reduce using rule 24 (statements)]
    END           reduce using rule 24 (statements)
    SWITCH        [reduce using rule 24 (statements)]
    WHEN          [reduce using rule 24 (statements)]
    '('           [reduce using rule 24 (statements)]

    statements        go to state 35
    statement_        go to state 36
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 15

   13 optional_variable: optional_variable variable •

    $default  reduce using rule 13 (optional_variable)


State 16

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 17

    3 function_header: FUNCTION IDENTIFIER error ';' •

    $default  reduce using rule 3 (function_header)


State 18

    9 parameter: IDENTIFIER ':' • type

    REAL       shift, and go to state 46
    CHARACTER  shift, and go to state 47
    INTEGER    shift, and go to state 48

    type  go to state 49


State 19

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    REAL       shift, and go to state 46
    CHARACTER  shift, and go to state 47
    INTEGER    shift, and go to state 48

    type  go to state 50


State 20

    8 parameter_list: parameter_list error •

    $default  reduce using rule 8 (parameter_list)


State 21

    7 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 8

    parameter  go to state 51


State 22

   16 variable: IDENTIFIER ':' • type IS expression ';'
   17         | IDENTIFIER ':' • LIST OF type IS list ';'

    REAL       shift, and go to state 46
    CHARACTER  shift, and go to state 47
    INTEGER    shift, and go to state 48
    LIST       shift, and go to state 52

    type  go to state 53


State 23

   26 statement_: error • ';'

    ';'  shift, and go to state 54


State 24

   76 primary: IDENTIFIER • '(' expression ')'
   77        | IDENTIFIER •

    '('  shift, and go to state 55

    $default  reduce using rule 77 (primary)


State 25

   72 primary: INT_LITERAL •

    $default  reduce using rule 72 (primary)


State 26

   73 primary: CHAR_LITERAL •

    $default  reduce using rule 73 (primary)


State 27

   75 primary: HEX_LITERAL •

    $default  reduce using rule 75 (primary)


State 28

   74 primary: REAL_LITERAL •

    $default  reduce using rule 74 (primary)


State 29

   70 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    primary  go to state 56


State 30

   35 fold_statement: FOLD • direction operator operand ENDFOLD

    LEFT   shift, and go to state 57
    RIGHT  shift, and go to state 58

    direction  go to state 59


State 31

   43 if_statement: IF • condition THEN statements elsif_clauses optional_else ENDIF

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    condition    go to state 62
    logical_and  go to state 63
    logical_not  go to state 64
    relation     go to state 65
    expression   go to state 66
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 32

   32 switch_statement: SWITCH • expression IS cases ENDSWITCH
   33                 | SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 67
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 33

   34 when_statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    condition    go to state 68
    logical_and  go to state 63
    logical_not  go to state 64
    relation     go to state 65
    expression   go to state 66
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 34

   71 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 69
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 35

   21 body: BEGIN_ statements • END ';'
   22 statements: statements • statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    END           shift, and go to state 70
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 71
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 36

   23 statements: statement_ •

    $default  reduce using rule 23 (statements)


State 37

   25 statement_: statement • ';'

    ';'  shift, and go to state 72


State 38

   31 statement: switch_statement •

    $default  reduce using rule 31 (statement)


State 39

   30 statement: when_statement •

    $default  reduce using rule 30 (statement)


State 40

   29 statement: fold_statement •

    $default  reduce using rule 29 (statement)


State 41

   28 statement: if_statement •

    $default  reduce using rule 28 (statement)


State 42

   27 statement: expression •
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 27 (statement)


State 43

   64 expression: term •
   65 term: term • MULOP factor
   66     | term • REMOP factor

    MULOP  shift, and go to state 74
    REMOP  shift, and go to state 75

    $default  reduce using rule 64 (expression)


State 44

   67 term: factor •

    $default  reduce using rule 67 (term)


State 45

   68 factor: primary •
   69       | primary • EXPOP factor

    EXPOP  shift, and go to state 76

    $default  reduce using rule 68 (factor)


State 46

   12 type: REAL •

    $default  reduce using rule 12 (type)


State 47

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 48

   10 type: INTEGER •

    $default  reduce using rule 10 (type)


State 49

    9 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 9 (parameter)


State 50

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 77


State 51

    7 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 7 (parameter_list)


State 52

   17 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 78


State 53

   16 variable: IDENTIFIER ':' type • IS expression ';'

    IS  shift, and go to state 79


State 54

   26 statement_: error ';' •

    $default  reduce using rule 26 (statement_)


State 55

   76 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 80
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 56

   70 primary: NEGOP primary •

    $default  reduce using rule 70 (primary)


State 57

   36 direction: LEFT •

    $default  reduce using rule 36 (direction)


State 58

   37 direction: RIGHT •

    $default  reduce using rule 37 (direction)


State 59

   35 fold_statement: FOLD direction • operator operand ENDFOLD

    ADDOP  shift, and go to state 81
    MULOP  shift, and go to state 82
    RELOP  shift, and go to state 83

    operator  go to state 84


State 60

   59 logical_not: NOTOP • logical_not

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    logical_not  go to state 85
    relation     go to state 65
    expression   go to state 66
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 61

   61 relation: '(' • condition ')'
   71 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    condition    go to state 86
    logical_and  go to state 63
    logical_not  go to state 64
    relation     go to state 65
    expression   go to state 87
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 62

   43 if_statement: IF condition • THEN statements elsif_clauses optional_else ENDIF
   54 condition: condition • ANDOP relation
   55          | condition • OROP logical_and

    ANDOP  shift, and go to state 88
    OROP   shift, and go to state 89
    THEN   shift, and go to state 90


State 63

   56 condition: logical_and •
   57 logical_and: logical_and • ANDOP logical_not

    ANDOP  shift, and go to state 91

    ANDOP     [reduce using rule 56 (condition)]
    $default  reduce using rule 56 (condition)


State 64

   58 logical_and: logical_not •

    $default  reduce using rule 58 (logical_and)


State 65

   60 logical_not: relation •

    $default  reduce using rule 60 (logical_not)


State 66

   62 relation: expression • RELOP expression
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73
    RELOP  shift, and go to state 92


State 67

   32 switch_statement: SWITCH expression • IS cases ENDSWITCH
   33                 | SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73
    IS     shift, and go to state 93


State 68

   34 when_statement: WHEN condition • ',' expression ':' expression
   54 condition: condition • ANDOP relation
   55          | condition • OROP logical_and

    ANDOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ','    shift, and go to state 94


State 69

   63 expression: expression • ADDOP term
   71 primary: '(' expression • ')'

    ADDOP  shift, and go to state 73
    ')'    shift, and go to state 95


State 70

   21 body: BEGIN_ statements END • ';'

    ';'  shift, and go to state 96


State 71

   22 statements: statements statement_ •

    $default  reduce using rule 22 (statements)


State 72

   25 statement_: statement ';' •

    $default  reduce using rule 25 (statement_)


State 73

   63 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    term     go to state 97
    factor   go to state 44
    primary  go to state 45


State 74

   65 term: term MULOP • factor

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    factor   go to state 98
    primary  go to state 45


State 75

   66 term: term REMOP • factor

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    factor   go to state 99
    primary  go to state 45


State 76

   69 factor: primary EXPOP • factor

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    factor   go to state 100
    primary  go to state 45


State 77

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 78

   17 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    REAL       shift, and go to state 46
    CHARACTER  shift, and go to state 47
    INTEGER    shift, and go to state 48

    type  go to state 101


State 79

   16 variable: IDENTIFIER ':' type IS • expression ';'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 102
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 80

   63 expression: expression • ADDOP term
   76 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 73
    ')'    shift, and go to state 103


State 81

   38 operator: ADDOP •

    $default  reduce using rule 38 (operator)


State 82

   39 operator: MULOP •

    $default  reduce using rule 39 (operator)


State 83

   40 operator: RELOP •

    $default  reduce using rule 40 (operator)


State 84

   35 fold_statement: FOLD direction operator • operand ENDFOLD

    IDENTIFIER  shift, and go to state 104
    '('         shift, and go to state 105

    list     go to state 106
    operand  go to state 107


State 85

   59 logical_not: NOTOP logical_not •

    $default  reduce using rule 59 (logical_not)


State 86

   54 condition: condition • ANDOP relation
   55          | condition • OROP logical_and
   61 relation: '(' condition • ')'

    ANDOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ')'    shift, and go to state 108


State 87

   62 relation: expression • RELOP expression
   63 expression: expression • ADDOP term
   71 primary: '(' expression • ')'

    ADDOP  shift, and go to state 73
    RELOP  shift, and go to state 92
    ')'    shift, and go to state 95


State 88

   54 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 61

    relation    go to state 109
    expression  go to state 66
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 89

   55 condition: condition OROP • logical_and

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    logical_and  go to state 110
    logical_not  go to state 64
    relation     go to state 65
    expression   go to state 66
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 90

   43 if_statement: IF condition THEN • statements elsif_clauses optional_else ENDIF

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    error         [reduce using rule 24 (statements)]
    IDENTIFIER    [reduce using rule 24 (statements)]
    INT_LITERAL   [reduce using rule 24 (statements)]
    CHAR_LITERAL  [reduce using rule 24 (statements)]
    HEX_LITERAL   [reduce using rule 24 (statements)]
    REAL_LITERAL  [reduce using rule 24 (statements)]
    NEGOP         [reduce using rule 24 (statements)]
    ELSIF         reduce using rule 24 (statements)
    FOLD          [reduce using rule 24 (statements)]
    IF            [reduce using rule 24 (statements)]
    ENDIF         reduce using rule 24 (statements)
    ELSE          reduce using rule 24 (statements)
    SWITCH        [reduce using rule 24 (statements)]
    WHEN          [reduce using rule 24 (statements)]
    '('           [reduce using rule 24 (statements)]

    statements        go to state 111
    statement_        go to state 36
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 91

   57 logical_and: logical_and ANDOP • logical_not

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    logical_not  go to state 112
    relation     go to state 65
    expression   go to state 66
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 92

   62 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 113
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 93

   32 switch_statement: SWITCH expression IS • cases ENDSWITCH
   33                 | SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 50 (cases)

    cases  go to state 114


State 94

   34 when_statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 115
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 95

   71 primary: '(' expression ')' •

    $default  reduce using rule 71 (primary)


State 96

   21 body: BEGIN_ statements END ';' •

    $default  reduce using rule 21 (body)


State 97

   63 expression: expression ADDOP term •
   65 term: term • MULOP factor
   66     | term • REMOP factor

    MULOP  shift, and go to state 74
    REMOP  shift, and go to state 75

    $default  reduce using rule 63 (expression)


State 98

   65 term: term MULOP factor •

    $default  reduce using rule 65 (term)


State 99

   66 term: term REMOP factor •

    $default  reduce using rule 66 (term)


State 100

   69 factor: primary EXPOP factor •

    $default  reduce using rule 69 (factor)


State 101

   17 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 116


State 102

   16 variable: IDENTIFIER ':' type IS expression • ';'
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73
    ';'    shift, and go to state 117


State 103

   76 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 76 (primary)


State 104

   42 operand: IDENTIFIER •

    $default  reduce using rule 42 (operand)


State 105

   18 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expressions  go to state 118
    expression   go to state 119
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 106

   41 operand: list •

    $default  reduce using rule 41 (operand)


State 107

   35 fold_statement: FOLD direction operator operand • ENDFOLD

    ENDFOLD  shift, and go to state 120


State 108

   61 relation: '(' condition ')' •

    $default  reduce using rule 61 (relation)


State 109

   54 condition: condition ANDOP relation •

    $default  reduce using rule 54 (condition)


State 110

   55 condition: condition OROP logical_and •
   57 logical_and: logical_and • ANDOP logical_not

    ANDOP  shift, and go to state 91

    ANDOP     [reduce using rule 55 (condition)]
    $default  reduce using rule 55 (condition)


State 111

   22 statements: statements • statement_
   43 if_statement: IF condition THEN statements • elsif_clauses optional_else ENDIF

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    ELSIF  reduce using rule 45 (elsif_clauses)
    ENDIF  reduce using rule 45 (elsif_clauses)
    ELSE   reduce using rule 45 (elsif_clauses)

    statement_        go to state 71
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    elsif_clauses     go to state 121
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 112

   57 logical_and: logical_and ANDOP logical_not •

    $default  reduce using rule 57 (logical_and)


State 113

   62 relation: expression RELOP expression •
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 62 (relation)


State 114

   32 switch_statement: SWITCH expression IS cases • ENDSWITCH
   33                 | SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   49 cases: cases • case

    CASE       shift, and go to state 122
    ENDSWITCH  shift, and go to state 123
    OTHERS     shift, and go to state 124

    case  go to state 125


State 115

   34 when_statement: WHEN condition ',' expression • ':' expression
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73
    ':'    shift, and go to state 126


State 116

   17 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 105

    list  go to state 127


State 117

   16 variable: IDENTIFIER ':' type IS expression ';' •

    $default  reduce using rule 16 (variable)


State 118

   18 list: '(' expressions • ')'
   19 expressions: expressions • ',' expression

    ','  shift, and go to state 128
    ')'  shift, and go to state 129


State 119

   20 expressions: expression •
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 20 (expressions)


State 120

   35 fold_statement: FOLD direction operator operand ENDFOLD •

    $default  reduce using rule 35 (fold_statement)


State 121

   43 if_statement: IF condition THEN statements elsif_clauses • optional_else ENDIF
   44 elsif_clauses: elsif_clauses • elsif_clause

    ELSIF  shift, and go to state 130
    ELSE   shift, and go to state 131

    $default  reduce using rule 48 (optional_else)

    elsif_clause   go to state 132
    optional_else  go to state 133


State 122

   51 case: CASE • INT_LITERAL ARROW statements
   52     | CASE • error ARROW statements ';'
   53     | CASE • INT_LITERAL ARROW error ';'

    error        shift, and go to state 134
    INT_LITERAL  shift, and go to state 135


State 123

   32 switch_statement: SWITCH expression IS cases ENDSWITCH •

    $default  reduce using rule 32 (switch_statement)


State 124

   33 switch_statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 136


State 125

   49 cases: cases case •

    $default  reduce using rule 49 (cases)


State 126

   34 when_statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 137
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 127

   17 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 138


State 128

   19 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 139
    term        go to state 43
    factor      go to state 44
    primary     go to state 45


State 129

   18 list: '(' expressions ')' •

    $default  reduce using rule 18 (list)


State 130

   46 elsif_clause: ELSIF • condition THEN statements

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 60
    '('           shift, and go to state 61

    condition    go to state 140
    logical_and  go to state 63
    logical_not  go to state 64
    relation     go to state 65
    expression   go to state 66
    term         go to state 43
    factor       go to state 44
    primary      go to state 45


State 131

   47 optional_else: ELSE • statements

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    error         [reduce using rule 24 (statements)]
    IDENTIFIER    [reduce using rule 24 (statements)]
    INT_LITERAL   [reduce using rule 24 (statements)]
    CHAR_LITERAL  [reduce using rule 24 (statements)]
    HEX_LITERAL   [reduce using rule 24 (statements)]
    REAL_LITERAL  [reduce using rule 24 (statements)]
    NEGOP         [reduce using rule 24 (statements)]
    FOLD          [reduce using rule 24 (statements)]
    IF            [reduce using rule 24 (statements)]
    ENDIF         reduce using rule 24 (statements)
    SWITCH        [reduce using rule 24 (statements)]
    WHEN          [reduce using rule 24 (statements)]
    '('           [reduce using rule 24 (statements)]

    statements        go to state 141
    statement_        go to state 36
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 132

   44 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 44 (elsif_clauses)


State 133

   43 if_statement: IF condition THEN statements elsif_clauses optional_else • ENDIF

    ENDIF  shift, and go to state 142


State 134

   52 case: CASE error • ARROW statements ';'

    ARROW  shift, and go to state 143


State 135

   51 case: CASE INT_LITERAL • ARROW statements
   53     | CASE INT_LITERAL • ARROW error ';'

    ARROW  shift, and go to state 144


State 136

   33 switch_statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement         go to state 145
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 137

   34 when_statement: WHEN condition ',' expression ':' expression •
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 34 (when_statement)


State 138

   17 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 17 (variable)


State 139

   19 expressions: expressions ',' expression •
   63 expression: expression • ADDOP term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 19 (expressions)


State 140

   46 elsif_clause: ELSIF condition • THEN statements
   54 condition: condition • ANDOP relation
   55          | condition • OROP logical_and

    ANDOP  shift, and go to state 88
    OROP   shift, and go to state 89
    THEN   shift, and go to state 146


State 141

   22 statements: statements • statement_
   47 optional_else: ELSE statements •

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    ENDIF  reduce using rule 47 (optional_else)

    statement_        go to state 71
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 142

   43 if_statement: IF condition THEN statements elsif_clauses optional_else ENDIF •

    $default  reduce using rule 43 (if_statement)


State 143

   52 case: CASE error ARROW • statements ';'

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    error         [reduce using rule 24 (statements)]
    IDENTIFIER    [reduce using rule 24 (statements)]
    INT_LITERAL   [reduce using rule 24 (statements)]
    CHAR_LITERAL  [reduce using rule 24 (statements)]
    HEX_LITERAL   [reduce using rule 24 (statements)]
    REAL_LITERAL  [reduce using rule 24 (statements)]
    NEGOP         [reduce using rule 24 (statements)]
    FOLD          [reduce using rule 24 (statements)]
    IF            [reduce using rule 24 (statements)]
    SWITCH        [reduce using rule 24 (statements)]
    WHEN          [reduce using rule 24 (statements)]
    ';'           reduce using rule 24 (statements)
    '('           [reduce using rule 24 (statements)]

    statements        go to state 147
    statement_        go to state 36
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 144

   51 case: CASE INT_LITERAL ARROW • statements
   53     | CASE INT_LITERAL ARROW • error ';'

    error         shift, and go to state 148
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    error         [reduce using rule 24 (statements)]
    IDENTIFIER    [reduce using rule 24 (statements)]
    INT_LITERAL   [reduce using rule 24 (statements)]
    CHAR_LITERAL  [reduce using rule 24 (statements)]
    HEX_LITERAL   [reduce using rule 24 (statements)]
    REAL_LITERAL  [reduce using rule 24 (statements)]
    NEGOP         [reduce using rule 24 (statements)]
    FOLD          [reduce using rule 24 (statements)]
    IF            [reduce using rule 24 (statements)]
    CASE          reduce using rule 24 (statements)
    ENDSWITCH     reduce using rule 24 (statements)
    OTHERS        reduce using rule 24 (statements)
    SWITCH        [reduce using rule 24 (statements)]
    WHEN          [reduce using rule 24 (statements)]
    '('           [reduce using rule 24 (statements)]

    statements        go to state 149
    statement_        go to state 36
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 145

   33 switch_statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 150


State 146

   46 elsif_clause: ELSIF condition THEN • statements

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    error         [reduce using rule 24 (statements)]
    IDENTIFIER    [reduce using rule 24 (statements)]
    INT_LITERAL   [reduce using rule 24 (statements)]
    CHAR_LITERAL  [reduce using rule 24 (statements)]
    HEX_LITERAL   [reduce using rule 24 (statements)]
    REAL_LITERAL  [reduce using rule 24 (statements)]
    NEGOP         [reduce using rule 24 (statements)]
    ELSIF         reduce using rule 24 (statements)
    FOLD          [reduce using rule 24 (statements)]
    IF            [reduce using rule 24 (statements)]
    ENDIF         reduce using rule 24 (statements)
    ELSE          reduce using rule 24 (statements)
    SWITCH        [reduce using rule 24 (statements)]
    WHEN          [reduce using rule 24 (statements)]
    '('           [reduce using rule 24 (statements)]

    statements        go to state 151
    statement_        go to state 36
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 147

   22 statements: statements • statement_
   52 case: CASE error ARROW statements • ';'

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    ';'           shift, and go to state 152
    '('           shift, and go to state 34

    statement_        go to state 71
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 148

   26 statement_: error • ';'
   53 case: CASE INT_LITERAL ARROW error • ';'

    ';'  shift, and go to state 153


State 149

   22 statements: statements • statement_
   51 case: CASE INT_LITERAL ARROW statements •

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    CASE       reduce using rule 51 (case)
    ENDSWITCH  reduce using rule 51 (case)
    OTHERS     reduce using rule 51 (case)

    statement_        go to state 71
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 150

   33 switch_statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 154


State 151

   22 statements: statements • statement_
   46 elsif_clause: ELSIF condition THEN statements •

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    ELSIF  reduce using rule 46 (elsif_clause)
    ENDIF  reduce using rule 46 (elsif_clause)
    ELSE   reduce using rule 46 (elsif_clause)

    statement_        go to state 71
    statement         go to state 37
    switch_statement  go to state 38
    when_statement    go to state 39
    fold_statement    go to state 40
    if_statement      go to state 41
    expression        go to state 42
    term              go to state 43
    factor            go to state 44
    primary           go to state 45


State 152

   52 case: CASE error ARROW statements ';' •

    $default  reduce using rule 52 (case)


State 153

   26 statement_: error ';' •
   53 case: CASE INT_LITERAL ARROW error ';' •

    CASE       reduce using rule 26 (statement_)
    CASE       [reduce using rule 53 (case)]
    ENDSWITCH  reduce using rule 26 (statement_)
    ENDSWITCH  [reduce using rule 53 (case)]
    OTHERS     reduce using rule 26 (statement_)
    OTHERS     [reduce using rule 53 (case)]
    $default   reduce using rule 26 (statement_)


State 154

   33 switch_statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 33 (switch_statement)
