Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER error ';'

    4 parameters: ε
    5           | parameter_list

    6 parameter_list: parameter
    7               | parameter_list ',' parameter
    8               | parameter_list error

    9 parameter: IDENTIFIER ':' type

   10 type: INTEGER
   11     | CHARACTER
   12     | REAL

   13 optional_variable: optional_variable variable
   14                  | optional_variable error
   15                  | ε

   16 variable: IDENTIFIER ':' type IS statement ';'
   17         | IDENTIFIER ':' LIST OF type IS list ';'

   18 list: '(' expressions ')'

   19 expressions: expressions ',' expression
   20            | expression

   21 body: BEGIN_ statement_ END ';'

   22 statement_: statement ';'
   23           | error ';'

   24 statement: expression
   25          | if_statement
   26          | fold_statement
   27          | WHEN condition ',' expression ':' expression
   28          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   29          | SWITCH expression IS cases error ';' ENDSWITCH

   30 fold_statement: FOLD direction operator operand ENDFOLD

   31 direction: LEFT
   32          | RIGHT

   33 operator: ADDOP
   34         | MULOP

   35 operand: list
   36        | IDENTIFIER

   37 if_statement: IF condition THEN statement_ elsif_clauses optional_else ENDFOLD

   38 elsif_clauses: elsif_clauses elsif_clause
   39              | ε

   40 elsif_clause: ELSIF condition THEN statement_

   41 optional_else: ELSE statement_
   42              | ε

   43 cases: cases case
   44      | ε

   45 case: CASE INT_LITERAL ARROW statement ';'
   46     | CASE error ARROW statement ';'
   47     | CASE INT_LITERAL ARROW error ';'

   48 condition: condition OROP logical_and
   49          | logical_and

   50 logical_and: logical_and ANDOP logical_not
   51            | logical_not

   52 logical_not: NOTOP logical_not
   53            | relation

   54 relation: '(' condition ')'
   55         | expression RELOP expression

   56 expression: expression ADDOP term
   57           | term

   58 term: term MULOP factor
   59     | term REMOP factor
   60     | factor

   61 factor: factor EXPOP primary
   62       | primary

   63 primary: '(' expression ')'
   64        | NEGOP primary
   65        | INT_LITERAL
   66        | CHAR_LITERAL
   67        | REAL_LITERAL
   68        | HEX_LITERAL
   69        | IDENTIFIER '(' expression ')'
   70        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 54 63 69
    ')' (41) 18 54 63 69
    ',' (44) 7 19 27
    ':' (58) 9 16 17 27
    ';' (59) 2 3 16 17 21 22 23 28 29 45 46 47
    error (256) 3 8 14 23 29 46 47
    IDENTIFIER (258) 2 3 9 16 17 36 69 70
    INT_LITERAL (259) 45 47 65
    CHAR_LITERAL (260) 66
    HEX_LITERAL (261) 68
    REAL (262) 12
    REAL_LITERAL (263) 67
    ADDOP (264) 33 56
    MULOP (265) 34 58
    ANDOP (266) 50
    RELOP (267) 55
    ARROW (268) 28 45 46 47
    REMOP (269) 59
    EXPOP (270) 61
    NEGOP (271) 64
    OROP (272) 48
    NOTOP (273) 52
    LEFT (274) 31
    RIGHT (275) 32
    ELSIF (276) 40
    ENDFOLD (277) 30 37
    FOLD (278) 30
    IF (279) 37
    THEN (280) 37 40
    BEGIN_ (281) 21
    CASE (282) 45 46 47
    CHARACTER (283) 11
    ELSE (284) 41
    END (285) 21
    ENDSWITCH (286) 28 29
    FUNCTION (287) 2 3
    INTEGER (288) 10
    IS (289) 16 17 28 29
    LIST (290) 17
    OF (291) 17
    OTHERS (292) 28
    RETURNS (293) 2
    SWITCH (294) 28 29
    WHEN (295) 27


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header (48)
        on left: 2 3
        on right: 1
    parameters (49)
        on left: 4 5
        on right: 2
    parameter_list (50)
        on left: 6 7 8
        on right: 5 7 8
    parameter (51)
        on left: 9
        on right: 6 7
    type (52)
        on left: 10 11 12
        on right: 2 9 16 17
    optional_variable (53)
        on left: 13 14 15
        on right: 1 13 14
    variable (54)
        on left: 16 17
        on right: 13
    list (55)
        on left: 18
        on right: 17 35
    expressions (56)
        on left: 19 20
        on right: 18 19
    body (57)
        on left: 21
        on right: 1
    statement_ (58)
        on left: 22 23
        on right: 21 37 40 41
    statement (59)
        on left: 24 25 26 27 28 29
        on right: 16 22 28 45 46
    fold_statement (60)
        on left: 30
        on right: 26
    direction (61)
        on left: 31 32
        on right: 30
    operator (62)
        on left: 33 34
        on right: 30
    operand (63)
        on left: 35 36
        on right: 30
    if_statement (64)
        on left: 37
        on right: 25
    elsif_clauses (65)
        on left: 38 39
        on right: 37 38
    elsif_clause (66)
        on left: 40
        on right: 38
    optional_else (67)
        on left: 41 42
        on right: 37
    cases (68)
        on left: 43 44
        on right: 28 29 43
    case (69)
        on left: 45 46 47
        on right: 43
    condition (70)
        on left: 48 49
        on right: 27 37 40 48 54
    logical_and (71)
        on left: 50 51
        on right: 48 49 50
    logical_not (72)
        on left: 52 53
        on right: 50 51 52
    relation (73)
        on left: 54 55
        on right: 53
    expression (74)
        on left: 56 57
        on right: 19 20 24 27 28 29 55 56 63 69
    term (75)
        on left: 58 59 60
        on right: 56 57 58 59
    factor (76)
        on left: 61 62
        on right: 58 59 60 61
    primary (77)
        on left: 63 64 65 66 67 68 69 70
        on right: 61 62 64


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION • IDENTIFIER error ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 15 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER • error ';'

    error       shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    RETURNS  reduce using rule 4 (parameters)

    parameters      go to state 9
    parameter_list  go to state 10
    parameter       go to state 11


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
   13 optional_variable: optional_variable • variable
   14                  | optional_variable • error

    error       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    BEGIN_      shift, and go to state 14

    variable  go to state 15
    body      go to state 16


State 7

    3 function_header: FUNCTION IDENTIFIER error • ';'

    ';'  shift, and go to state 17


State 8

    9 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 9

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 19


State 10

    5 parameters: parameter_list •
    7 parameter_list: parameter_list • ',' parameter
    8               | parameter_list • error

    error  shift, and go to state 20
    ','    shift, and go to state 21

    RETURNS  reduce using rule 5 (parameters)


State 11

    6 parameter_list: parameter •

    $default  reduce using rule 6 (parameter_list)


State 12

   14 optional_variable: optional_variable error •

    $default  reduce using rule 14 (optional_variable)


State 13

   16 variable: IDENTIFIER • ':' type IS statement ';'
   17         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 22


State 14

   21 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement_      go to state 35
    statement       go to state 36
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 15

   13 optional_variable: optional_variable variable •

    $default  reduce using rule 13 (optional_variable)


State 16

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 17

    3 function_header: FUNCTION IDENTIFIER error ';' •

    $default  reduce using rule 3 (function_header)


State 18

    9 parameter: IDENTIFIER ':' • type

    REAL       shift, and go to state 43
    CHARACTER  shift, and go to state 44
    INTEGER    shift, and go to state 45

    type  go to state 46


State 19

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    REAL       shift, and go to state 43
    CHARACTER  shift, and go to state 44
    INTEGER    shift, and go to state 45

    type  go to state 47


State 20

    8 parameter_list: parameter_list error •

    $default  reduce using rule 8 (parameter_list)


State 21

    7 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 8

    parameter  go to state 48


State 22

   16 variable: IDENTIFIER ':' • type IS statement ';'
   17         | IDENTIFIER ':' • LIST OF type IS list ';'

    REAL       shift, and go to state 43
    CHARACTER  shift, and go to state 44
    INTEGER    shift, and go to state 45
    LIST       shift, and go to state 49

    type  go to state 50


State 23

   23 statement_: error • ';'

    ';'  shift, and go to state 51


State 24

   69 primary: IDENTIFIER • '(' expression ')'
   70        | IDENTIFIER •

    '('  shift, and go to state 52

    $default  reduce using rule 70 (primary)


State 25

   65 primary: INT_LITERAL •

    $default  reduce using rule 65 (primary)


State 26

   66 primary: CHAR_LITERAL •

    $default  reduce using rule 66 (primary)


State 27

   68 primary: HEX_LITERAL •

    $default  reduce using rule 68 (primary)


State 28

   67 primary: REAL_LITERAL •

    $default  reduce using rule 67 (primary)


State 29

   64 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    primary  go to state 53


State 30

   30 fold_statement: FOLD • direction operator operand ENDFOLD

    LEFT   shift, and go to state 54
    RIGHT  shift, and go to state 55

    direction  go to state 56


State 31

   37 if_statement: IF • condition THEN statement_ elsif_clauses optional_else ENDFOLD

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    condition    go to state 59
    logical_and  go to state 60
    logical_not  go to state 61
    relation     go to state 62
    expression   go to state 63
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 32

   28 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   29          | SWITCH • expression IS cases error ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 64
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 33

   27 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    condition    go to state 65
    logical_and  go to state 60
    logical_not  go to state 61
    relation     go to state 62
    expression   go to state 63
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 34

   63 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 66
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 35

   21 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 67


State 36

   22 statement_: statement • ';'

    ';'  shift, and go to state 68


State 37

   26 statement: fold_statement •

    $default  reduce using rule 26 (statement)


State 38

   25 statement: if_statement •

    $default  reduce using rule 25 (statement)


State 39

   24 statement: expression •
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69

    $default  reduce using rule 24 (statement)


State 40

   57 expression: term •
   58 term: term • MULOP factor
   59     | term • REMOP factor

    MULOP  shift, and go to state 70
    REMOP  shift, and go to state 71

    $default  reduce using rule 57 (expression)


State 41

   60 term: factor •
   61 factor: factor • EXPOP primary

    EXPOP  shift, and go to state 72

    $default  reduce using rule 60 (term)


State 42

   62 factor: primary •

    $default  reduce using rule 62 (factor)


State 43

   12 type: REAL •

    $default  reduce using rule 12 (type)


State 44

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 45

   10 type: INTEGER •

    $default  reduce using rule 10 (type)


State 46

    9 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 9 (parameter)


State 47

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 73


State 48

    7 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 7 (parameter_list)


State 49

   17 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 74


State 50

   16 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 75


State 51

   23 statement_: error ';' •

    $default  reduce using rule 23 (statement_)


State 52

   69 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 76
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 53

   64 primary: NEGOP primary •

    $default  reduce using rule 64 (primary)


State 54

   31 direction: LEFT •

    $default  reduce using rule 31 (direction)


State 55

   32 direction: RIGHT •

    $default  reduce using rule 32 (direction)


State 56

   30 fold_statement: FOLD direction • operator operand ENDFOLD

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78

    operator  go to state 79


State 57

   52 logical_not: NOTOP • logical_not

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    logical_not  go to state 80
    relation     go to state 62
    expression   go to state 63
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 58

   54 relation: '(' • condition ')'
   63 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    condition    go to state 81
    logical_and  go to state 60
    logical_not  go to state 61
    relation     go to state 62
    expression   go to state 82
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 59

   37 if_statement: IF condition • THEN statement_ elsif_clauses optional_else ENDFOLD
   48 condition: condition • OROP logical_and

    OROP  shift, and go to state 83
    THEN  shift, and go to state 84


State 60

   49 condition: logical_and •
   50 logical_and: logical_and • ANDOP logical_not

    ANDOP  shift, and go to state 85

    $default  reduce using rule 49 (condition)


State 61

   51 logical_and: logical_not •

    $default  reduce using rule 51 (logical_and)


State 62

   53 logical_not: relation •

    $default  reduce using rule 53 (logical_not)


State 63

   55 relation: expression • RELOP expression
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69
    RELOP  shift, and go to state 86


State 64

   28 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   29          | SWITCH expression • IS cases error ';' ENDSWITCH
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69
    IS     shift, and go to state 87


State 65

   27 statement: WHEN condition • ',' expression ':' expression
   48 condition: condition • OROP logical_and

    OROP  shift, and go to state 83
    ','   shift, and go to state 88


State 66

   56 expression: expression • ADDOP term
   63 primary: '(' expression • ')'

    ADDOP  shift, and go to state 69
    ')'    shift, and go to state 89


State 67

   21 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 90


State 68

   22 statement_: statement ';' •

    $default  reduce using rule 22 (statement_)


State 69

   56 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    term     go to state 91
    factor   go to state 41
    primary  go to state 42


State 70

   58 term: term MULOP • factor

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    factor   go to state 92
    primary  go to state 42


State 71

   59 term: term REMOP • factor

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    factor   go to state 93
    primary  go to state 42


State 72

   61 factor: factor EXPOP • primary

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    primary  go to state 94


State 73

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 74

   17 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    REAL       shift, and go to state 43
    CHARACTER  shift, and go to state 44
    INTEGER    shift, and go to state 45

    type  go to state 95


State 75

   16 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement       go to state 96
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 76

   56 expression: expression • ADDOP term
   69 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 69
    ')'    shift, and go to state 97


State 77

   33 operator: ADDOP •

    $default  reduce using rule 33 (operator)


State 78

   34 operator: MULOP •

    $default  reduce using rule 34 (operator)


State 79

   30 fold_statement: FOLD direction operator • operand ENDFOLD

    IDENTIFIER  shift, and go to state 98
    '('         shift, and go to state 99

    list     go to state 100
    operand  go to state 101


State 80

   52 logical_not: NOTOP logical_not •

    $default  reduce using rule 52 (logical_not)


State 81

   48 condition: condition • OROP logical_and
   54 relation: '(' condition • ')'

    OROP  shift, and go to state 83
    ')'   shift, and go to state 102


State 82

   55 relation: expression • RELOP expression
   56 expression: expression • ADDOP term
   63 primary: '(' expression • ')'

    ADDOP  shift, and go to state 69
    RELOP  shift, and go to state 86
    ')'    shift, and go to state 89


State 83

   48 condition: condition OROP • logical_and

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    logical_and  go to state 103
    logical_not  go to state 61
    relation     go to state 62
    expression   go to state 63
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 84

   37 if_statement: IF condition THEN • statement_ elsif_clauses optional_else ENDFOLD

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement_      go to state 104
    statement       go to state 36
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 85

   50 logical_and: logical_and ANDOP • logical_not

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    logical_not  go to state 105
    relation     go to state 62
    expression   go to state 63
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 86

   55 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 106
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 87

   28 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH
   29          | SWITCH expression IS • cases error ';' ENDSWITCH

    $default  reduce using rule 44 (cases)

    cases  go to state 107


State 88

   27 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 108
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 89

   63 primary: '(' expression ')' •

    $default  reduce using rule 63 (primary)


State 90

   21 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 21 (body)


State 91

   56 expression: expression ADDOP term •
   58 term: term • MULOP factor
   59     | term • REMOP factor

    MULOP  shift, and go to state 70
    REMOP  shift, and go to state 71

    $default  reduce using rule 56 (expression)


State 92

   58 term: term MULOP factor •
   61 factor: factor • EXPOP primary

    EXPOP  shift, and go to state 72

    $default  reduce using rule 58 (term)


State 93

   59 term: term REMOP factor •
   61 factor: factor • EXPOP primary

    EXPOP  shift, and go to state 72

    $default  reduce using rule 59 (term)


State 94

   61 factor: factor EXPOP primary •

    $default  reduce using rule 61 (factor)


State 95

   17 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 109


State 96

   16 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 110


State 97

   69 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 69 (primary)


State 98

   36 operand: IDENTIFIER •

    $default  reduce using rule 36 (operand)


State 99

   18 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expressions  go to state 111
    expression   go to state 112
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 100

   35 operand: list •

    $default  reduce using rule 35 (operand)


State 101

   30 fold_statement: FOLD direction operator operand • ENDFOLD

    ENDFOLD  shift, and go to state 113


State 102

   54 relation: '(' condition ')' •

    $default  reduce using rule 54 (relation)


State 103

   48 condition: condition OROP logical_and •
   50 logical_and: logical_and • ANDOP logical_not

    ANDOP  shift, and go to state 85

    $default  reduce using rule 48 (condition)


State 104

   37 if_statement: IF condition THEN statement_ • elsif_clauses optional_else ENDFOLD

    $default  reduce using rule 39 (elsif_clauses)

    elsif_clauses  go to state 114


State 105

   50 logical_and: logical_and ANDOP logical_not •

    $default  reduce using rule 50 (logical_and)


State 106

   55 relation: expression RELOP expression •
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69

    $default  reduce using rule 55 (relation)


State 107

   28 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   29          | SWITCH expression IS cases • error ';' ENDSWITCH
   43 cases: cases • case

    error   shift, and go to state 115
    CASE    shift, and go to state 116
    OTHERS  shift, and go to state 117

    case  go to state 118


State 108

   27 statement: WHEN condition ',' expression • ':' expression
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69
    ':'    shift, and go to state 119


State 109

   17 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 99

    list  go to state 120


State 110

   16 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 16 (variable)


State 111

   18 list: '(' expressions • ')'
   19 expressions: expressions • ',' expression

    ','  shift, and go to state 121
    ')'  shift, and go to state 122


State 112

   20 expressions: expression •
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69

    $default  reduce using rule 20 (expressions)


State 113

   30 fold_statement: FOLD direction operator operand ENDFOLD •

    $default  reduce using rule 30 (fold_statement)


State 114

   37 if_statement: IF condition THEN statement_ elsif_clauses • optional_else ENDFOLD
   38 elsif_clauses: elsif_clauses • elsif_clause

    ELSIF  shift, and go to state 123
    ELSE   shift, and go to state 124

    $default  reduce using rule 42 (optional_else)

    elsif_clause   go to state 125
    optional_else  go to state 126


State 115

   29 statement: SWITCH expression IS cases error • ';' ENDSWITCH

    ';'  shift, and go to state 127


State 116

   45 case: CASE • INT_LITERAL ARROW statement ';'
   46     | CASE • error ARROW statement ';'
   47     | CASE • INT_LITERAL ARROW error ';'

    error        shift, and go to state 128
    INT_LITERAL  shift, and go to state 129


State 117

   28 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 130


State 118

   43 cases: cases case •

    $default  reduce using rule 43 (cases)


State 119

   27 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 131
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 120

   17 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 132


State 121

   19 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    '('           shift, and go to state 34

    expression  go to state 133
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 122

   18 list: '(' expressions ')' •

    $default  reduce using rule 18 (list)


State 123

   40 elsif_clause: ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    NOTOP         shift, and go to state 57
    '('           shift, and go to state 58

    condition    go to state 134
    logical_and  go to state 60
    logical_not  go to state 61
    relation     go to state 62
    expression   go to state 63
    term         go to state 40
    factor       go to state 41
    primary      go to state 42


State 124

   41 optional_else: ELSE • statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement_      go to state 135
    statement       go to state 36
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 125

   38 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 38 (elsif_clauses)


State 126

   37 if_statement: IF condition THEN statement_ elsif_clauses optional_else • ENDFOLD

    ENDFOLD  shift, and go to state 136


State 127

   29 statement: SWITCH expression IS cases error ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 137


State 128

   46 case: CASE error • ARROW statement ';'

    ARROW  shift, and go to state 138


State 129

   45 case: CASE INT_LITERAL • ARROW statement ';'
   47     | CASE INT_LITERAL • ARROW error ';'

    ARROW  shift, and go to state 139


State 130

   28 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement       go to state 140
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 131

   27 statement: WHEN condition ',' expression ':' expression •
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69

    $default  reduce using rule 27 (statement)


State 132

   17 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 17 (variable)


State 133

   19 expressions: expressions ',' expression •
   56 expression: expression • ADDOP term

    ADDOP  shift, and go to state 69

    $default  reduce using rule 19 (expressions)


State 134

   40 elsif_clause: ELSIF condition • THEN statement_
   48 condition: condition • OROP logical_and

    OROP  shift, and go to state 83
    THEN  shift, and go to state 141


State 135

   41 optional_else: ELSE statement_ •

    $default  reduce using rule 41 (optional_else)


State 136

   37 if_statement: IF condition THEN statement_ elsif_clauses optional_else ENDFOLD •

    $default  reduce using rule 37 (if_statement)


State 137

   29 statement: SWITCH expression IS cases error ';' ENDSWITCH •

    $default  reduce using rule 29 (statement)


State 138

   46 case: CASE error ARROW • statement ';'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement       go to state 142
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 139

   45 case: CASE INT_LITERAL ARROW • statement ';'
   47     | CASE INT_LITERAL ARROW • error ';'

    error         shift, and go to state 143
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement       go to state 144
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 140

   28 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 145


State 141

   40 elsif_clause: ELSIF condition THEN • statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    CHAR_LITERAL  shift, and go to state 26
    HEX_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    NEGOP         shift, and go to state 29
    FOLD          shift, and go to state 30
    IF            shift, and go to state 31
    SWITCH        shift, and go to state 32
    WHEN          shift, and go to state 33
    '('           shift, and go to state 34

    statement_      go to state 146
    statement       go to state 36
    fold_statement  go to state 37
    if_statement    go to state 38
    expression      go to state 39
    term            go to state 40
    factor          go to state 41
    primary         go to state 42


State 142

   46 case: CASE error ARROW statement • ';'

    ';'  shift, and go to state 147


State 143

   47 case: CASE INT_LITERAL ARROW error • ';'

    ';'  shift, and go to state 148


State 144

   45 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 149


State 145

   28 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 150


State 146

   40 elsif_clause: ELSIF condition THEN statement_ •

    $default  reduce using rule 40 (elsif_clause)


State 147

   46 case: CASE error ARROW statement ';' •

    $default  reduce using rule 46 (case)


State 148

   47 case: CASE INT_LITERAL ARROW error ';' •

    $default  reduce using rule 47 (case)


State 149

   45 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 45 (case)


State 150

   28 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 28 (statement)
